mpicc -c write_vtk.c
mpifort -c -O3 -ftree-vectorize -march=native -ffast-math -funroll-loops -fopenmp main.f90
mpifort -O3 -ftree-vectorize -march=native -ffast-math -funroll-loops -fopenmp main.o write_vtk.o -o runme
OMP_NUM_THREADS 1
n-62-21-78
====================
OMP_NUM_THREADS 2
n-62-21-78
====================
OMP_NUM_THREADS 4
n-62-21-78
====================
OMP_NUM_THREADS 8
n-62-21-78
====================
OMP_NUM_THREADS 16
n-62-21-78
====================
OMP_NUM_THREADS 32
n-62-21-78
====================

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 9614363: <profiling> in cluster <dcc> Done

Job <profiling> was submitted from host <n-62-27-21> by user <s164331> in cluster <dcc> at Tue May  4 14:26:43 2021
Job was executed on host(s) <24*n-62-21-78>, in queue <hpcintro>, as user <s164331> in cluster <dcc> at Tue May  4 14:43:11 2021
                            <24*n-62-21-76>
                            <24*n-62-21-77>
</zhome/a0/5/117468> was used as the home directory.
</zhome/a0/5/117468/Kurser/LSM/Project2/RB Gauss Seidel, Fortran openMP> was used as the working directory.
Started at Tue May  4 14:43:11 2021
Terminated at Tue May  4 14:53:17 2021
Results reported at Tue May  4 14:53:17 2021

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash
#BSUB -n 72
#BSUB -R "span[block=24]"
#BSUB -W 00:59
#BSUB -q hpcintro
#BSUB -R "rusage[mem=3GB]"
#BSUB -J profiling
#BSUB -o HPCOutputs/Output_%J.out
#BSUB -e HPCOutputs/Error_%J.err

# clear out the LSB affinity file (it disturbs in this setup)
/bin/rm -f $LSB_AFFINITY_HOSTFILE
touch $LSB_AFFINITY_HOSTFILE

# load MPI version
module purge
module load mpi/3.1.3-gcc-8.2.0

# mpirun options
BIND="--bind-to socket"
MAP="--map-by node"
RANK="--rank-by socket"
REPORT="--report-bindings"

# do a clean build to ensure everything is updated
make clean
make

# Loop matrix size
for N in 264 #{8..1000}
do

# Loop px
for p in 1
do
px=$((p))
py=$((p))
pz=$((p))

np=$((px*py*pz))
nx=$((N/px))

# Skipping cases:
# skip cases where np > N
[ $np -gt $N ] && continue

# skip calculations with more processors than available
[ $np -gt $LSB_DJOB_NUMPROC ] && continue

# skip situations that runs out of memory (here estimated for 3bg / node)

(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   2848.25 sec.
    Max Memory :                                 194 MB
    Average Memory :                             176.86 MB
    Total Requested Memory :                     221184.00 MB
    Delta Memory :                               220990.00 MB
    Max Swap :                                   144 MB
    Max Processes :                              7
    Max Threads :                                49
    Run time :                                   606 sec.
    Turnaround time :                            1594 sec.

The output (if any) is above this job summary.



PS:

Read file <HPCOutputs/Error_9614363.err> for stderr output of this job.

